{
    "Description": "AWS Serverless API that creates Agent name/PIN pairs on a DynamoDB table when the call is transferred to PCI Pal by Amazon Connect Contact Centre, so it can be delivered back to the same agent as the outgoing call loops back to the CC, by making another call to lambda to retrieve the agent name from Amazon DynamoDB.",
    "Parameters": {
        "WriteCapacity": {
            "Default": "4",
            "Type": "Number",
            "Description": "Write capacity for the DynamoDB Agent table.",
            "MinValue": 1
        },
        "ReadCapacity": {
            "Default": "4",
            "Type": "Number",
            "Description": "Read capacity for the DynamoDB Agent table.",
            "MinValue": 1
        },
        "AgentTableName": {
			"Default": "PCI_Pal_Amazon_Connect_Active_Agents",
            "MinLength": "0",
            "Type": "String",
            "Description": "Name of DynamoDB table used to store the Agents' usernames. If left blank a new table will be created."
        },
        "ShouldCreateTable": {
			"Default": "true",
            "Type": "String",
            "Description": "If true then the DynamoDB Agents and PINs table will be created with the CloudFormation stack.",
            "AllowedValues": [
                "true"
            ]
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "AgentTable": {
            "Value": {
                "Fn::If": [
                    "CreateAgentTable",
                    {
                        "Ref": "AgentTable"
                    },
                    {
                        "Ref": "AgentTableName"
                    }
                ]
            }
        }
    },
    "Conditions": {
        "CreateAgentTable": {
            "Fn::Equals": [
                {
                    "Ref": "ShouldCreateTable"
                },
                "true"
            ]
        },
        "TableNameGenerated": {
            "Fn::Equals": [
                {
                    "Ref": "AgentTableName"
                },
                ""
            ]
        }
    },
    "Resources": {
        "ServerlessRestApiDeploymentaf87fe3282": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "Description": "RestApi deployment id: af87fe32828a1173b536f711daa29a9f3c431731",
                "StageName": "Stage"
            }
        },
        "AddAgent": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "pcipal-amazon-connect-integration-us-east-1",
                    "S3Key": "GetAgent-CodeUri-Or-ImageUri-637438186982386965-637438187068923098.zip"
                },
                "Description": "Function to add a Agent and return an Agent with a new PIN",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 256,
                "Environment": {
                    "Variables": {
                        "AgentTable": {
                            "Fn::If": [
                                "CreateAgentTable",
                                {
                                    "Ref": "AgentTable"
                                },
                                {
                                    "Ref": "AgentTableName"
                                }
                            ]
                        }
                    }
                },
                "Handler": "AWS_agent_pin_for_amazon_connect_loop::AWS_agent_pin_for_amazon_connect_loop.Functions::AddAgentAsync",
                "Role": {
                    "Fn::GetAtt": [
                        "AddAgentRole",
                        "Arn"
                    ]
                },
                "Timeout": 30,
                "Runtime": "dotnetcore3.1"
            }
        },
        "AgentTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "KeySchema": [
                    {
                        "KeyType": "HASH",
                        "AttributeName": "PIN"
                    }
                ],
                "TableName": {
                    "Fn::If": [
                        "TableNameGenerated",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "AgentTableName"
                        }
                    ]
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "PIN",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "WriteCapacityUnits": {
                        "Ref": "WriteCapacity"
                    },
                    "ReadCapacityUnits": {
                        "Ref": "ReadCapacity"
                    }
                }
            },
            "Condition": "CreateAgentTable"
        },
        "RemoveAgentPutResourcePermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "RemoveAgent"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "ServerlessRestApiProdStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ServerlessRestApiDeploymentaf87fe3282"
                },
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "StageName": "Prod"
            }
        },
        "AddAgentRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
                ],
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ]
            }
        },
        "AddAgentPutResourcePermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "AddAgent"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "RemoveAgentRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
                ],
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ]
            }
        },
        "RemoveAgent": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "pcipal-amazon-connect-integration-us-east-1",
                    "S3Key": "GetAgent-CodeUri-Or-ImageUri-637438186982386965-637438187068923098.zip"
                },
                "Description": "Function to remove a Agent",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 256,
                "Environment": {
                    "Variables": {
                        "AgentTable": {
                            "Fn::If": [
                                "CreateAgentTable",
                                {
                                    "Ref": "AgentTable"
                                },
                                {
                                    "Ref": "AgentTableName"
                                }
                            ]
                        }
                    }
                },
                "Handler": "AWS_agent_pin_for_amazon_connect_loop::AWS_agent_pin_for_amazon_connect_loop.Functions::RemoveAgentAsync",
                "Role": {
                    "Fn::GetAtt": [
                        "RemoveAgentRole",
                        "Arn"
                    ]
                },
                "Timeout": 30,
                "Runtime": "dotnetcore3.1"
            }
        },
        "GetAgentPutResourcePermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "GetAgent"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/*",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "GetAgent": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "pcipal-amazon-connect-integration-us-east-1",
                    "S3Key": "GetAgent-CodeUri-Or-ImageUri-637438186982386965-637438187068923098.zip"
                },
                "Description": "Function to get a single Agent",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 256,
                "Environment": {
                    "Variables": {
                        "AgentTable": {
                            "Fn::If": [
                                "CreateAgentTable",
                                {
                                    "Ref": "AgentTable"
                                },
                                {
                                    "Ref": "AgentTableName"
                                }
                            ]
                        }
                    }
                },
                "Handler": "AWS_agent_pin_for_amazon_connect_loop::AWS_agent_pin_for_amazon_connect_loop.Functions::GetAgentAsync",
                "Role": {
                    "Fn::GetAtt": [
                        "GetAgentRole",
                        "Arn"
                    ]
                },
                "Timeout": 30,
                "Runtime": "dotnetcore3.1"
            }
        },
        "ServerlessRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Body": {
                    "info": {
                        "version": "1.0",
                        "title": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    "paths": {
                        "/": {
                            "put": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddAgent.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "delete": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RemoveAgent.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/{Id}": {
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAgent.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        }
                    },
                    "swagger": "2.0"
                }
            }
        },
        "GetAgentRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
                ],
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ]
            }
        }
    }
}